---
- name: Kibana | Installing dependencies
  apt:
    name: "{{ kibana_required_libs }}"
    state: present
    update_cache: true

- name: Kibana | Ensure Kibana group
  group:
    name: "{{ kibana_group }}"
    system: true

- name: Kibana | Ensure Kibana user
  user:
    name: "{{ kibana_user }}"
    group: "{{ kibana_group }}"
    system: true
    shell: /bin/false

- name: Kibana | Check installed version
  command: "{{ kibana_home }}/bin/kibana --version"
  register: kibana_version_check
  become: yes
  become_user: "{{ kibana_user }}"
  changed_when: false
  failed_when: false

- name: Kibana | Stop service
  systemd:
    name: kibana
    state: stopped
  when: |
    kibana_force_reinstall or
    kibana_version_check is failed or
    kibana_version_check.stdout != kibana_version
  ignore_errors: true

- name: Kibana | Remove old version
  file:
    path: "{{ kibana_home }}"
    state: absent
  when: |
    kibana_force_reinstall or
    kibana_version_check is failed or
    kibana_version_check.stdout != kibana_version

- name: Kibana | Ensure Kibana home dir exist
  file:
    path: "{{ kibana_home }}"
    state: directory
    owner: "{{ kibana_user }}"
    group: "{{ kibana_group }}"
    mode: 0755
  when: |
    kibana_force_reinstall or
    kibana_version_check is failed or
    kibana_version_check.stdout != kibana_version

- name: Kibana | Untar Kibana
  unarchive:
    extra_opts: ['--strip-components=1']
    src: "{{ kibana_package_url }}"
    remote_src: true
    dest: "{{ kibana_home }}"
    owner: "{{ kibana_user }}"
    group: "{{ kibana_group }}"
  when: |
    kibana_force_reinstall or
    kibana_version_check is failed or
    kibana_version_check.stdout != kibana_version
